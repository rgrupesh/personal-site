{"title":"Full Stack Web Development with JavaScript","markdown":{"yaml":{"title":"Full Stack Web Development with JavaScript","image":"full-stack-javascript.jpg","date":"2020-07-24","author":"Rupesh Gelal","categories":["HTML/CSS","JavaScript","React","Vue","Node.js","Express","MongoDB"]},"containsRefs":false,"markdown":"\n\nJavaScript has come long way in the last 20 years. JavaScript engine were orginally used only in web browsers, but they are now embedded even in some servers, usually via [Node.js](https://nodejs.org/en/). This evolution has made JavaScript a universal language.\n\n<h2>Whai is Full Stack Web Development?</h2>\n\nFull Stack is the development of both front end/client-side and back end/server-side. Full Stack Web Development can be divided into three major layers: presentation layer, business logic layer, and data access layer. Presentation layer handles UI/UX, business logic layer deals with dyanamic data processing, and data access layer provides data acesss through an API.\n\n![](three-layers.png)\n\n<h2>How to Become a Full Stack Web Developer?</h2>\n\nFirstly, developer should have knowledge of front end technologies like [ BootStrap ](https://getbootstrap.com/), [Javascript](https://www.javascript.com/), [React](https://reactjs.org/), [Angular](https://angular.io/) or [Vue](https://vuejs.org/) in addition to HTML and CSS. Secondly, they should be equally good with backend tools like [Node.js](https://nodejs.org/en/), [Django](https://www.djangoproject.com/), [Express](https://expressjs.com/) and language like [Python](https://www.python.org/), [ASP.NET](https://dotnet.microsoft.com/apps/aspnet), [Java](https://www.java.com/en/), [C++](https://en.wikipedia.org/wiki/C%2B%2B#:~:text=Before%20the%20initial%20standardization%20in,level%20features%20for%20program%20organization.), [PHP](https://www.php.net/). Finally,they are also required to have knowledge of databases like [SQL](https://en.wikipedia.org/wiki/SQL), [MYSQL](https://www.mysql.com/), [SQLite](https://www.sqlite.org/index.html) or [MongoDB](https://www.mongodb.com/).\n\n![](traditional.png)\n\nFurther, a Full Stack developer can specialize into one or many software stack.For instance:\n\n1:  MEAN Stack: MONGO | EXPRESS | ANGULAR| NODE\n\n2: MERN Stack: MONGO | EXPRESS | REACT| NODE\n\n3: MEVN Stack: MONGO | EXPRESS | VUE | NODE\n\n4: LAMP Stack: LINUX | APACHE | MYSQL | PHP\n\n5: Django Stack: JAVASCRIPT | PYTHON | DJANGO | MYSQL\n\n<h2>Javascript Full Stack</h2>\n\nLearning various languages can be cumbersome at times. This is where JavaScript comes in. In JavaScript Full Stack, presentaion layer is built using JavaScript frameworks, such as: [React](https://reactjs.org/), [Angular](https://angular.io/) or [Vue](https://vuejs.org/). Similarly, business logic layer is constructed with [Node.js](https://nodejs.org/en/) and node-modules to communicate with front end using REST API serving JSON. Finally, [MongoDB](https://www.mongodb.com/) is used in data access layer.\n\n![](js.png)\n\nThere's trade-off everywhere. JavaScript Full Stack Web Dev is no exception.\n\n**Pros**\n- Prototype can be build rapidly.\n- Common language, better team efficiency with less resources.\n- Code reusability.\n- Can switch between front and back end development based on requirements.\n\n**Cons**\n- Node.js is not recommended for heavy backend computation and data processing.\n- Jack of all trades, master of none? May be.\n","srcMarkdownNoYaml":"\n\nJavaScript has come long way in the last 20 years. JavaScript engine were orginally used only in web browsers, but they are now embedded even in some servers, usually via [Node.js](https://nodejs.org/en/). This evolution has made JavaScript a universal language.\n\n<h2>Whai is Full Stack Web Development?</h2>\n\nFull Stack is the development of both front end/client-side and back end/server-side. Full Stack Web Development can be divided into three major layers: presentation layer, business logic layer, and data access layer. Presentation layer handles UI/UX, business logic layer deals with dyanamic data processing, and data access layer provides data acesss through an API.\n\n![](three-layers.png)\n\n<h2>How to Become a Full Stack Web Developer?</h2>\n\nFirstly, developer should have knowledge of front end technologies like [ BootStrap ](https://getbootstrap.com/), [Javascript](https://www.javascript.com/), [React](https://reactjs.org/), [Angular](https://angular.io/) or [Vue](https://vuejs.org/) in addition to HTML and CSS. Secondly, they should be equally good with backend tools like [Node.js](https://nodejs.org/en/), [Django](https://www.djangoproject.com/), [Express](https://expressjs.com/) and language like [Python](https://www.python.org/), [ASP.NET](https://dotnet.microsoft.com/apps/aspnet), [Java](https://www.java.com/en/), [C++](https://en.wikipedia.org/wiki/C%2B%2B#:~:text=Before%20the%20initial%20standardization%20in,level%20features%20for%20program%20organization.), [PHP](https://www.php.net/). Finally,they are also required to have knowledge of databases like [SQL](https://en.wikipedia.org/wiki/SQL), [MYSQL](https://www.mysql.com/), [SQLite](https://www.sqlite.org/index.html) or [MongoDB](https://www.mongodb.com/).\n\n![](traditional.png)\n\nFurther, a Full Stack developer can specialize into one or many software stack.For instance:\n\n1:  MEAN Stack: MONGO | EXPRESS | ANGULAR| NODE\n\n2: MERN Stack: MONGO | EXPRESS | REACT| NODE\n\n3: MEVN Stack: MONGO | EXPRESS | VUE | NODE\n\n4: LAMP Stack: LINUX | APACHE | MYSQL | PHP\n\n5: Django Stack: JAVASCRIPT | PYTHON | DJANGO | MYSQL\n\n<h2>Javascript Full Stack</h2>\n\nLearning various languages can be cumbersome at times. This is where JavaScript comes in. In JavaScript Full Stack, presentaion layer is built using JavaScript frameworks, such as: [React](https://reactjs.org/), [Angular](https://angular.io/) or [Vue](https://vuejs.org/). Similarly, business logic layer is constructed with [Node.js](https://nodejs.org/en/) and node-modules to communicate with front end using REST API serving JSON. Finally, [MongoDB](https://www.mongodb.com/) is used in data access layer.\n\n![](js.png)\n\nThere's trade-off everywhere. JavaScript Full Stack Web Dev is no exception.\n\n**Pros**\n- Prototype can be build rapidly.\n- Common language, better team efficiency with less resources.\n- Code reusability.\n- Can switch between front and back end development based on requirements.\n\n**Cons**\n- Node.js is not recommended for heavy backend computation and data processing.\n- Jack of all trades, master of none? May be.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"output-file":"Full-Stack-JavaScipt.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","theme":"yeti","title-block-banner":true,"title":"Full Stack Web Development with JavaScript","image":"full-stack-javascript.jpg","date":"2020-07-24","author":"Rupesh Gelal","categories":["HTML/CSS","JavaScript","React","Vue","Node.js","Express","MongoDB"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}